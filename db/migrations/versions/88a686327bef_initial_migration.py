"""Initial migration

Revision ID: 88a686327bef
Revises: 
Create Date: 2025-05-23 15:10:09.905908

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '88a686327bef'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('works',
    sa.Column('work_id', sa.UUID(), nullable=False),
    sa.Column('doi', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('authors', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('work_id'),
    sa.UniqueConstraint('doi')
    )
    op.create_table('files',
    sa.Column('file_id', sa.UUID(), nullable=False),
    sa.Column('work_id', sa.UUID(), nullable=False),
    sa.Column('uri', sa.String(), nullable=False),
    sa.Column('sha256', sa.String(length=64), nullable=False),
    sa.Column('mime_type', sa.String(), nullable=False),
    sa.Column('size_bytes', sa.BigInteger(), nullable=False),
    sa.Column('num_pages', sa.Integer(), nullable=True),
    sa.Column('licence', sa.String(), nullable=True),
    sa.Column('ingested_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['work_id'], ['works.work_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('file_id'),
    sa.UniqueConstraint('sha256')
    )
    op.create_table('chunks',
    sa.Column('chunk_id', sa.UUID(), nullable=False),
    sa.Column('file_id', sa.UUID(), nullable=False),
    sa.Column('page_from', sa.Integer(), nullable=False),
    sa.Column('page_to', sa.Integer(), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('embedding', pgvector.sqlalchemy.vector.VECTOR(dim=768), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['file_id'], ['files.file_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('chunk_id')
    )
    op.create_table('ingest_queue',
    sa.Column('ingest_id', sa.BigInteger(), nullable=False),
    sa.Column('file_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('retries', sa.Integer(), nullable=False),
    sa.Column('last_error', sa.Text(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['file_id'], ['files.file_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ingest_id')
    )
    op.create_table('summaries',
    sa.Column('summary_id', sa.UUID(), nullable=False),
    sa.Column('file_id', sa.UUID(), nullable=False),
    sa.Column('kind', sa.Enum('tl_dr', 'abstract', 'section', name='summary_kind'), nullable=False),
    sa.Column('summary_text', sa.Text(), nullable=False),
    sa.Column('generated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['file_id'], ['files.file_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('summary_id'),
    sa.UniqueConstraint('file_id')
    )
    op.drop_table('items')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('items',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('item_data', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('embedding', pgvector.sqlalchemy.vector.VECTOR(dim=1536), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='items_pkey')
    )
    op.drop_table('summaries')
    op.drop_table('ingest_queue')
    op.drop_table('chunks')
    op.drop_table('files')
    op.drop_table('works')
    # ### end Alembic commands ###
